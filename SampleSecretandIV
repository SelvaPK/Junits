import javax.crypto.spec.SecretKeySpec;
import javax.crypto.spec.IvParameterSpec;
import java.util.Base64;

public class SampleSecretAndIV {

    public static void main(String[] args) {
        // Sample SecretKey (16 bytes for AES-128, 24 bytes for AES-192, 32 bytes for AES-256)
        byte[] secretKeyBytes = {
            0x2b, 0x7e, 0x15, 0x16, 0x28, 0xae, 0xd2, 0xa6,
            0xab, 0xf7, 0x97, 0x20, 0x61, 0x9d, 0x7f, 0x46
        };
        SecretKeySpec secretKey = new SecretKeySpec(secretKeyBytes, "AES");

        // Sample IvParameterSpec (16 bytes for AES)
        byte[] ivBytes = {
            0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
            0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f
        };
        IvParameterSpec ivParameterSpec = new IvParameterSpec(ivBytes);

        // For convenience, you can also encode these values in Base64
        String encodedSecretKey = Base64.getEncoder().encodeToString(secretKeyBytes);
        String encodedIV = Base64.getEncoder().encodeToString(ivBytes);

        System.out.println("Encoded SecretKey: " + encodedSecretKey);
        System.out.println("Encoded IV: " + encodedIV);
    }
}
